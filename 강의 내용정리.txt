https://www.inflearn.com/course/%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%85%EB%AC%B8/unit/57954
타입스크립트 입문
[orientation]
이미 작성된 코드에 타입스크립트 적용하는 방식으로 해나갈 것임.

  - git 주소 : https://github.com/joshua1988/learn-typescript
  - TypeScript 핸드북 : https://joshua1988.github.io/ts/intro.html

타입스크립트 : '자바스크립트에 타입을 부여한 것이다.'
※ 컴파일을 해줘야 함!

- 장점 : 
1) 에러의 사전방지
  예)
  주소: [object Object]
  간혹가다 이런식으로 뜨는 경우 많이 있었을 것이다.
  Object를 불러올 때, 그 해당 값이 명확하지 않으므로 그냥 객체라고만 하는 것인데
  이를 TypeScript를 사용하면 더욱 명확하게 사용할 수 있다는 것이다.

  혹은 undefined 등의 값을 보여주는 것도 마찬가지.

    /**
  * @typedef {object} User
  * @property {string} username
  * @property {string} email
  * @property {string} address
  */
  /**
  * 
  * @returns {Promise<User>}
  */

  이런식으로 저장해두면, 이를 자동완성을 도와줄 수 있음 
  (위는 javascript에서 정해두는 식으로 사용한 것임)
  오탈자의 방지가 가능해짐.

2) 코드 가이드 및 자동완성

  function add(a: number, b: number): number {
    return a + b;
  }

  add(10, '20');

  위에서 '20'을 에러로 간주시킴.

  또 그 결과 값이 number로 정했기 때문에
  toLocaleString 같은 함수를 자동완성이 가능함.
  (vscode IntelliSense)


- 자바스크립트에서도 type을 정해서 사용할 수 있음.
  /**
  *
  * @param {number} a 첫번째 숫자
  * @param {number} b 두번째 숫자
  * @returns
  */

  //@ts-check 
  위를 입력하면 ts 체크가 가능함.


[타입스크립트 시작하기]
typescript 사용하기
명령어 : 
  npm i typescript -g : typescript 사용하기
  tsc index.ts : index.ts => index.js로 변환

웹팩 같은 번들러, 뭐 그런걸 이용해서 명령어 자동화가 가능함. 

tsconfig.json 파일을 사용하여  옵션을 설정해줘야함.

※ 타입스크립트 PlayGround
https://www.typescriptlang.org/play

typescript=>js파일로 바꿔주는 웹페이지임.

babel : 자바스크립트의 최신 문법을 모든 브라우저에서 지원 가능하게 변환해주는 프로그램

[타입스크립트의 기초]
- 선언 방식
  // JS 방식
  var str = 'hello';

  // TS 문자열 선언
  var str: string = 'hello';

